---
- name: Create NetBox application directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
  with_items:
    - "{{ netbox_releases_path }}"
    - "{{ netbox_shared_path }}"
    - "{{ netbox_shared_path }}/media/image-attachments"
    - "{{ netbox_shared_path }}/reports"

- include: "install_via_{{ 'git' if netbox_git else 'stable' }}.yml"

- include: generate_secret_key.yml
  when:
    - netbox_config.SECRET_KEY is not defined

- name: Pin Django REST Framework dependency to under 3.7.0 for NetBox 2.1.5 and below
  replace:
    path: "{{ netbox_current_path }}/requirements.txt"
    regexp: '^(djangorestframework>=\d+\.\d+(\.\d+)?)$'
    replace: '\1,<3.7.0'
  when:
    - (netbox_stable and netbox_stable_version | version_compare('2.1.5', '<=')) or (netbox_git and __netbox_git_contains_issue_1563_fix.rc == 1)

- name: Pin django-filter dependency to under 2.0.0 for NetBox 2.3.5 and below
  replace:
    path: "{{ netbox_current_path }}/requirements.txt"
    regexp: '^(django-filter>=\d+\.\d+(\.\d+)?)$'
    replace: '\1,<2.0.0'
  when:
    - (netbox_stable and netbox_stable_version | version_compare('2.3.5', '<=')) or (netbox_git and __netbox_git_contains_issue_2239_fix.rc == 1)

- name: Create NetBox virtualenv and install needed Python dependencies
  pip:
    requirements: "{{ netbox_current_path }}/requirements.txt"
    virtualenv: "{{ netbox_virtualenv_path }}"
    virtualenv_python: "{{ netbox_python3_binary if (netbox_python == 3) else netbox_python2_binary }}"
  become: True
  become_user: "{{ netbox_user }}"

- name: Generate NetBox configuration file
  template:
    src: templates/configuration.py.j2
    dest: "{{ netbox_shared_path }}/configuration.py"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    mode: 0640
    validate: "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s'; c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c'; py_compile.compile(f, c); os.remove(c)\""
  notify:
    - reload netbox.service

- block:
  - name: Install django-auth-ldap if LDAP is enabled
    pip:
      name: django-auth-ldap
      virtualenv: "{{ netbox_virtualenv_path }}"
    become: True
    become_user: "{{ netbox_user }}"

  - name: Generate LDAP configuration for NetBox if enabled
    template:
      src: "{{ netbox_ldap_config_template }}"
      dest: "{{ netbox_shared_path }}/ldap_config.py"
      owner: "{{ netbox_user }}"
      group: "{{ netbox_group }}"
      mode: 0640
      validate: "{{ netbox_virtualenv_path }}/bin/python -c \"import py_compile,os; f=r'%s'; c='/tmp/' + os.path.basename(os.path.dirname(f)) + '-' + os.path.basename(f) + 'c'; py_compile.compile(f, c); os.remove(c)\""
    notify:
      - reload netbox.service
  when:
    - netbox_ldap_enabled

- name: Install napalm if NAPALM integration is enabled
  pip:
    name: napalm
    virtualenv: "{{ netbox_virtualenv_path }}"
  when:
    - netbox_napalm_enabled
  become: True
  become_user: "{{ netbox_user }}"

- name: Symlink NetBox configuration file into the active NetBox release
  file:
    src: "{{ netbox_shared_path }}/configuration.py"
    dest: "{{ netbox_config_path }}/configuration.py"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    state: link

- name: Symlink/Remove NetBox LDAP configuration file into/from the active NetBox release
  file:
    src: "{{ netbox_shared_path }}/ldap_config.py"
    dest: "{{ netbox_config_path }}/ldap_config.py"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    state: "{{ 'link' if netbox_ldap_enabled else 'absent' }}"
  notify:
    - reload netbox.service

- name: Set MEDIA_ROOT to shared media directory (will be deprecated - if this is not skipped please update your NetBox)
  lineinfile:
    path: "{{ netbox_config_path }}/settings.py"
    regexp: '^MEDIA_ROOT\s*='
    line: 'MEDIA_ROOT = "{{ netbox_shared_path }}/media/"'
    state: present
  notify:
    - reload netbox.service
  when:
    - (netbox_stable and netbox_stable_version | version_compare('2.1.4', '<')) or (netbox_git and __netbox_git_contains_media_root_change.rc == 1)

- block:
  - name: Run database migrations for NetBox
    django_manage:
      command: migrate
      app_path: "{{ netbox_current_path }}/netbox"
      virtualenv: "{{ netbox_virtualenv_path }}"

  - name: Create a super user for NetBox
    shell: "printf '{{ netbox_superuser_script }}' | {{ netbox_virtualenv_path }}/bin/python {{ netbox_current_path }}/netbox/manage.py shell"
    register: __netbox_superuser_result
    changed_when: "'changed' in __netbox_superuser_result.stdout"
    when:
      - not netbox_ldap_enabled

  - name: Generate static assets for NetBox
    django_manage:
      command: collectstatic
      app_path: "{{ netbox_current_path }}/netbox"
      virtualenv: "{{ netbox_virtualenv_path }}"

  - name: Populate NetBox with initial data
    django_manage:
      command: loaddata
      fixtures: initial_data
      app_path: "{{ netbox_current_path }}/netbox"
      virtualenv: "{{ netbox_virtualenv_path }}"
    when:
      - netbox_load_initial_data

  become: True
  become_user: "{{ netbox_user }}"
